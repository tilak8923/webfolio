{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/optimize-seo.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview An AI agent that optimizes text for SEO.\n *\n * - optimizeSEO - A function that optimizes input text for search engine optimization.\n * - OptimizeSEOInput - The input type for the optimizeSEO function.\n * - OptimizeSEOOutput - The return type for the optimizeSEO function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst OptimizeSEOInputSchema = z.object({\n  text: z.string().describe('The text to optimize for SEO.'),\n  keywords: z.string().describe('Comma separated list of keywords to optimize for.'),\n});\nexport type OptimizeSEOInput = z.infer<typeof OptimizeSEOInputSchema>;\n\nconst OptimizeSEOOutputSchema = z.object({\n  optimizedText: z.string().describe('The text optimized for SEO.'),\n});\nexport type OptimizeSEOOutput = z.infer<typeof OptimizeSEOOutputSchema>;\n\nexport async function optimizeSEO(input: OptimizeSEOInput): Promise<OptimizeSEOOutput> {\n  return optimizeSEOFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'optimizeSEOPrompt',\n  input: {schema: OptimizeSEOInputSchema},\n  output: {schema: OptimizeSEOOutputSchema},\n  prompt: `You are an SEO expert. Optimize the following text for the keywords provided.\\n\\nText: {{{text}}}\\nKeywords: {{{keywords}}}`,\n});\n\nconst optimizeSEOFlow = ai.defineFlow(\n  {\n    name: 'optimizeSEOFlow',\n    inputSchema: OptimizeSEOInputSchema,\n    outputSchema: OptimizeSEOOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,yBAAyB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACtC,MAAM,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC1B,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAChC;AAGA,MAAM,0BAA0B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACvC,eAAe,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACrC;AAGO,eAAe,uCAAS,GAAT,YAAY,KAAuB;IACvD,OAAO,gBAAgB;AACzB;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAsB;IACtC,QAAQ;QAAC,QAAQ;IAAuB;IACxC,QAAQ,CAAC,2HAA2H,CAAC;AACvI;AAEA,MAAM,kBAAkB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACnC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IApBoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 294, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions/seo.ts"],"sourcesContent":["'use server';\nimport { optimizeSEO, type OptimizeSEOInput } from '@/ai/flows/optimize-seo';\nimport { z } from 'zod';\n\nconst seoOptimizerSchema = z.object({\n  text: z.string().min(10, { message: \"Text must be at least 10 characters.\" }),\n  keywords: z.string().min(3, { message: \"Keywords must be at least 3 characters.\" }),\n});\n\nexport interface SEOOptimizerFormState {\n  message?: string;\n  errors?: {\n    text?: string[];\n    keywords?: string[];\n    server?: string[];\n  };\n  optimizedText?: string | null;\n  success: boolean;\n}\n\nexport async function getOptimizedTextAction(\n  prevState: SEOOptimizerFormState,\n  formData: FormData\n): Promise<SEOOptimizerFormState> {\n  const rawData = {\n    text: formData.get('text'),\n    keywords: formData.get('keywords'),\n  };\n\n  const validatedFields = seoOptimizerSchema.safeParse(rawData);\n\n  if (!validatedFields.success) {\n    return {\n      errors: validatedFields.error.flatten().fieldErrors,\n      message: \"Validation failed. Please check the fields.\",\n      optimizedText: null,\n      success: false,\n    };\n  }\n\n  try {\n    const result = await optimizeSEO(validatedFields.data as OptimizeSEOInput);\n    return { \n      optimizedText: result.optimizedText,\n      message: \"Text optimized successfully!\",\n      errors: {},\n      success: true \n    };\n  } catch (error) {\n    console.error(\"SEO Optimization Error:\", error);\n    return { \n      errors: { server: [\"Failed to optimize text due to a server error. Please try again.\"] },\n      message: \"Server error during optimization.\",\n      optimizedText: null,\n      success: false\n    };\n  }\n}\n"],"names":[],"mappings":";;;;;AACA;AACA;;;;;;AAEA,MAAM,qBAAqB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAClC,MAAM,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI;QAAE,SAAS;IAAuC;IAC3E,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAA0C;AACnF;AAaO,eAAe,uCAAoB,GAApB,uBACpB,SAAgC,EAChC,QAAkB;IAElB,MAAM,UAAU;QACd,MAAM,SAAS,GAAG,CAAC;QACnB,UAAU,SAAS,GAAG,CAAC;IACzB;IAEA,MAAM,kBAAkB,mBAAmB,SAAS,CAAC;IAErD,IAAI,CAAC,gBAAgB,OAAO,EAAE;QAC5B,OAAO;YACL,QAAQ,gBAAgB,KAAK,CAAC,OAAO,GAAG,WAAW;YACnD,SAAS;YACT,eAAe;YACf,SAAS;QACX;IACF;IAEA,IAAI;QACF,MAAM,SAAS,MAAM,CAAA,GAAA,qIAAA,CAAA,cAAW,AAAD,EAAE,gBAAgB,IAAI;QACrD,OAAO;YACL,eAAe,OAAO,aAAa;YACnC,SAAS;YACT,QAAQ,CAAC;YACT,SAAS;QACX;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO;YACL,QAAQ;gBAAE,QAAQ;oBAAC;iBAAmE;YAAC;YACvF,SAAS;YACT,eAAe;YACf,SAAS;QACX;IACF;AACF;;;IArCsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 361, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 412, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/custom/seo-optimizer-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/custom/seo-optimizer-form.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/custom/seo-optimizer-form.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgT,GAC7U,8EACA","debugId":null}},
    {"offset": {"line": 426, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/custom/seo-optimizer-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/custom/seo-optimizer-form.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/custom/seo-optimizer-form.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4R,GACzT,0DACA","debugId":null}},
    {"offset": {"line": 440, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 450, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/seo-optimizer/page.tsx"],"sourcesContent":["import SEOOptimizerForm from '@/components/custom/seo-optimizer-form';\n\nexport const metadata = {\n  title: 'SEO Optimizer | FolioForge',\n  description: 'Optimize your content for SEO using AI. Enhance your bio and project descriptions.',\n};\n\nexport default function SEOOptimizerPage() {\n  return (\n    <section className=\"container py-12\">\n      <SEOOptimizerForm />\n    </section>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAA;;;AAEO,MAAM,WAAW;IACtB,OAAO;IACP,aAAa;AACf;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAQ,WAAU;kBACjB,cAAA,8OAAC,wJAAA,CAAA,UAAgB;;;;;;;;;;AAGvB","debugId":null}}]
}